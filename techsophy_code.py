# -*- coding: utf-8 -*-
"""Techsophy_code

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nBgmxEMjRFNtn3OhE317lCcKsExrmcxn
"""

import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler
data = pd.DataFrame({
    'CustomerID': [101, 102],
    'Age': [25, 45],
    'Tenure': [1, 5],
    'Balance': [50000, 150000],
    'NumOfProducts': [1, 2],
    'HasCrCard': [1, 0],
    'IsActiveMember': [1, 0],
    'EstimatedSalary': [60000, 80000],
    'SatisfactionScore': [3, 1],
    'CompetitorContacted': [0, 1],
    'Exited': [0, 1]
})
X = data.drop(['CustomerID', 'Exited'], axis=1)
y = data['Exited']
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
model = LogisticRegression()
model.fit(X_scaled, y)
data['Churn_Probability'] = model.predict_proba(X_scaled)[:, 1]
data['Churn_Predicted'] = model.predict(X_scaled)
def segment_customer(row):
    if row['SatisfactionScore'] <= 2 and row['CompetitorContacted'] == 1:
        return 'High Risk'
    elif row['SatisfactionScore'] <= 2:
        return 'At Risk'
    else:
        return 'Stable'

data['Segment'] = data.apply(segment_customer, axis=1)
def retention_strategy(row):
    if row['Segment'] == 'High Risk':
        return 'Offer discount & call from relationship manager'
    elif row['Segment'] == 'At Risk':
        return 'Send satisfaction survey & loyalty bonus'
    else:
        return 'Send thank you note and product upgrade info'

data['Suggested_Action'] = data.apply(retention_strategy, axis=1)
output = data[['CustomerID', 'Churn_Probability', 'Churn_Predicted', 'Segment', 'Suggested_Action']]
print("=== Customer Churn Prediction & Retention System ===\n")
print(output.to_string(index=False))